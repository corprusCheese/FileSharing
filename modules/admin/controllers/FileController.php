<?php

namespace app\modules\admin\controllers;

use app\models\Comment;
use app\models\File;
use app\other\SphinxHelper;
use Yii;
use yii\helpers\Url;

class FileController extends \app\controllers\FileController {

    public $layout = 'main';

    public function beforeAction($action)
    {
        if (!Yii::$app->user->can('allFiles')){
            $this->redirect('../../site/error');
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    //загрузка пользователю
    public function actionDownload(){

        //находит файл в базе
        $fileId = Yii::$app->request->get('id');
        $model = File::find()->where(['id'=>$fileId])->one();

        //получает путь к файлу
        $fileName = $model->name.'.'.$model->extension;
        $absFilePath = File::getFolder($model,true) .'\\' .$fileName;

        if (file_exists($absFilePath)) {
            Yii::$app->response->sendFile($absFilePath)->send();
        }
        else {
            throw new \Exception('Файл '.$fileName.' не найден');
        }
    }

    public function actionDelete(){
        //находит файл в базе
        $fileId = Yii::$app->request->get('id');
        //находит fileid в списке файлов пользователя

        //получает всех детей и удаляет их
        $comments = Comment::find()->where(['fileId'=>$fileId])->all();
        foreach ($comments as $i)
            $i->delete();

        $model = File::find()->where(['id'=>$fileId])->one();
        $fileName = $model->name.'.'.$model->extension;
        $filePath = File::getFolder($model,true) .'\\' .$fileName;

        //удаляет из базы файл
        $model->delete();

        //удаляет из папки
        try {
            unlink($filePath);
        }
        catch(\Exception $e){}

        SphinxHelper::deleteFromRt($fileId);

        //редирект
        return $this->redirect(Url::to(['site/lastloads']));
    }

}